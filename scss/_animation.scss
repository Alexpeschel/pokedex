// how far do we want to roll/move the balls
// figures much higher or smaller than this
// doesn't look "right".

$roll: 18deg; $move: 6px;

// this wobbles and bounces the ball
// like the "capture" animation on the
// gameboy games.

@keyframes pokewobble {

  2% { transform: rotate(-$roll); margin-left: -$move; }
  4% { transform: rotate($roll); margin-left: $move; }
  6%, 30% { transform: rotate(0deg); margin-left: 0px; }

  32% { transform: rotate(-$roll); margin-left: -$move; }
  34% { transform: rotate($roll); margin-left: $move; }
  36% { transform: rotate(0deg); margin-left: 0px; }

  62% { margin-top: 0; }
  63% { margin-top: -3px; }
  64% { margin-top: 0px; }
  65% { margin-top: -2px; }
  68% { margin-top: 0; }

}

// this animates the shadow.
// it's essentially a "inverse"
// of the pokewobble anim.
// psuedo-elements are stuck on the
// parent's plane, so the shadow
// would normally roll around with
// the ball, so we counter it with
// this animation.

@keyframes pokeshadow {
  2% { transform: rotate($roll); }
  4% { transform: rotate(-$roll); }
  6%, 30% { transform: rotate(0deg); }

  32% { transform: rotate($roll); }
  34% { transform: rotate(-$roll);  }
  36% { transform: rotate(0deg); }

  62% { bottom: -2px; }
  63% { bottom: -6px; }
  64% { bottom: -2px; }
  65% { bottom: -4px; }
  68% { bottom: -2px; }
}

// this makes the little button
// "glow" when the pokemon is "caught"

@keyframes pokeglow {

  60% { background: white; box-shadow: $buttonShadow }
  68% { background: rgb(255,95,50); box-shadow: $buttonShadow, 0 0 4px 2px rgb(255,95,50); }
  80% { background: white; box-shadow: $buttonShadow; }

}
